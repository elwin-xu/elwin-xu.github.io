{"version":3,"sources":["components/navigationBar.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","Navbar","className","sticky","bg","variant","expand","Container","fluid","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","target","rel","aria-hidden","Component","Main","Jumbotron","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6SAoCeA,E,uKA/BP,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAU,iCAAiCC,OAAO,MAAMC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,MAC9F,kBAACC,EAAA,EAAD,CAAWC,MAAM,MACb,kBAACP,EAAA,EAAOQ,MAAR,CAAcC,KAAK,SAAnB,aACA,kBAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7B,kBAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKb,UAAU,SACX,kBAACa,EAAA,EAAIC,KAAL,CAAUN,KAAK,UAAf,YACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,aAAf,YACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,eAAf,cACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,cAAf,aACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,YAAf,YAEJ,kBAACK,EAAA,EAAD,CAAKb,UAAU,wBACX,kBAACa,EAAA,EAAIC,KAAL,CAAUN,KAAK,mDAAmDO,OAAO,SAASC,IAAI,uBAClF,uBAAGhB,UAAU,iBAAiBiB,cAAY,UAE9C,kBAACJ,EAAA,EAAIC,KAAL,CAAUN,KAAK,+BAA+BO,OAAO,SAASC,IAAI,uBAC9D,uBAAGhB,UAAU,eAAeiB,cAAY,UAE5C,kBAACJ,EAAA,EAAIC,KAAL,CAAUN,KAAK,+BAA+BO,OAAO,SAASC,IAAI,uBAC9D,uBAAGhB,UAAU,cAAciB,cAAY,kB,GAvB3CC,a,QCwFbC,EAhFF,kBACT,6BACI,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,KACI,kBAACf,EAAA,EAAD,CAAWC,MAAM,MACb,iDACA,2cAKR,6BAASN,UAAU,kBAAkBY,GAAG,cACpC,yBAAKZ,UAAU,wBACX,+CAEA,6BAASA,UAAU,YACf,yBAAKA,UAAU,eACX,uDACA,0CACA,mDACA,wDAEJ,yBAAKA,UAAU,eACX,4BACI,mFACA,yFACA,uGACA,2FAKZ,6BAASA,UAAU,YACf,yBAAKA,UAAU,eACX,iDACA,iEACA,6CACA,wDAEJ,yBAAKA,UAAU,eACX,4BACI,mIAEA,yGACA,mGACA,uGACA,kGACA,qGAQpB,6BAASA,UAAU,aACf,yBAAKA,UAAU,wBACX,yCAEA,6BAASA,UAAU,kBACf,6DACA,8CACA,uGAGJ,6BAASA,UAAU,kBACf,6DACA,8CACA,kHCxELqB,EAFH,kBAAM,kBAAC,EAAD,OCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAD,KAAe,kBAAC,EAAD,OACfC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4e95fd96.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nclass NavigationBar extends Component {\n    render() {\n        return (\n            <Navbar className=\"border-bottom border-lightgrey\" sticky=\"top\" bg=\"white\" variant=\"light\" expand=\"lg\">\n                <Container fluid=\"xl\">\n                    <Navbar.Brand href=\"#home\">Zixuan Xu</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"items\">\n                            <Nav.Link href=\"#About\">About Me</Nav.Link>\n                            <Nav.Link href=\"#projects\">Projects</Nav.Link>\n                            <Nav.Link href=\"#experience\">Experience</Nav.Link>\n                            <Nav.Link href=\"#education\">Education</Nav.Link>\n                            <Nav.Link href=\"#contact\">Contact</Nav.Link>\n                        </Nav>\n                        <Nav className=\"social-links ml-auto\">\n                            <Nav.Link href=\"https://www.linkedin.com/in/zixuan-xu-432759167/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fa fa-linkedin\" aria-hidden=\"true\" />\n                            </Nav.Link>\n                            <Nav.Link href=\"https://github.com/zixuan-xu\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fa fa-github\" aria-hidden=\"true\" />\n                            </Nav.Link>\n                            <Nav.Link href=\"mailto:zi.xuan.xu@icloud.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fa fa-inbox\" aria-hidden=\"true\" />\n                            </Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        )\n    }\n}\n\nexport default NavigationBar;","import React from 'react';\n// import { Switch, Route } from 'react-router-dom';\n\n// import Home from './home';\n// import AboutMe from \"./aboutme\";\n// import Projects from './projects'\nimport NavigationBar from './navigationBar';\nimport { Jumbotron, Container } from 'react-bootstrap';\n\n\n\nconst Main = () => (\n    <div>\n        <NavigationBar />\n        <Jumbotron>\n            <Container fluid=\"xl\">\n                <h1>Software Engineer</h1>\n                <p>\n                    Graduated from one of the top universities in China, I started my career as a software engineer in a leading consulting firm in China developing structural design software for professional civil engineers. I used MFC on Visual Studio and source control tools including Git to collaborate with my teammates. The team adopted agile development methodology, enabling me to have a lot of interactions with customers and teammates.\n                </p>\n            </Container>\n        </Jumbotron>\n        <section className=\"work-experience\" id=\"experience\">\n            <div className=\"content-wrap divider\">\n                <h2>Work Experience</h2>\n\n                <section className=\"job-item\">\n                    <div className=\"job-details\">\n                        <h3>Civil Engineer - Intern</h3>\n                        <p>Delta Group</p>\n                        <p>Melbourne, Australia</p>\n                        <p>Mar 2019 – Jun 2019</p>\n                    </div>\n                    <div className=\"job-summary\">\n                        <ul>\n                            <li>QSE (Quality, Safety, and Environment) office tasks</li>\n                            <li>Supported senior project engineers (on-site and off-site)</li>\n                            <li>Maintained all documentation required for the monthly progress approval</li>\n                            <li>Prepared drawings for fire safety inspections and audits</li>\n                        </ul>\n                    </div>\n                </section>\n\n                <section className=\"job-item\">\n                    <div className=\"job-details\">\n                        <h3>Software Engineer</h3>\n                        <p>China Academy of Building Research</p>\n                        <p>Beijing, China</p>\n                        <p>Jun 2017 – Feb 2018</p>\n                    </div>\n                    <div className=\"job-summary\">\n                        <ul>\n                            <li>Adopted agile software development methodologies while working closely with teammates and customers\n              </li>\n                            <li>Communicated with customers to research possible improvements of software</li>\n                            <li>Designed user interface and interactive mechanism using C++ and MFC</li>\n                            <li>Implemented saving functionality of calculations using JSON file format</li>\n                            <li>Designed algorithms to match joint components with different sizes</li>\n                            <li>Worked on the project collaboratively on Visual Studio using Git</li>\n                        </ul>\n                    </div>\n                </section>\n\n            </div>\n        </section>\n\n        <section className=\"education\">\n            <div className=\"content-wrap divider\">\n                <h2>Education</h2>\n\n                <section className=\"education-item\">\n                    <h3>Shanghai Jiao Tong University</h3>\n                    <p>Shanghai, China</p>\n                    <p>Master's Degree (Architectural and Civil Engineering), 2014 – 2017</p>\n                </section>\n\n                <section className=\"education-item\">\n                    <h3>Shanghai Jiao Tong University</h3>\n                    <p>Shanghai, China</p>\n                    <p>Bachelor's Degree (Naval Architecture and Ocean Engineering), 2010 – 2014</p>\n                </section>\n            </div>\n        </section>\n    </div>\n    // <Switch>\n    //     <Route exact path=\"/\" component={Home} />\n    //     <Route path=\"/aboutme\" component={AboutMe} />\n    //     <Route path=\"/projects\" component={Projects } />\n    // </Switch>\n);\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/main';\n//import { Link } from 'react-router-dom';\n\nconst App = () => <Main />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}